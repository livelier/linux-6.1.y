// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2018 Martin Blumenstingl <martin.blumenstingl@googlemail.com>.
 * Based on meson-gxl-s905d-p231.dts:
 * - Copyright (c) 2016 Endless Computers, Inc.
 *   Author: Carlo Caione <carlo@endlessm.com>
 */

/dts-v1/;

#include "meson-gxl-s905x.dtsi"
#include "meson-gx-p23x-q20x.dtsi"
#include <dt-bindings/leds/common.h>
#include <dt-bindings/thermal/thermal.h>

/ {
	compatible = "oranth,tx3-mini", "amlogic,s905w", "amlogic,meson-gxl";
	model = "Oranth Tanix TX3 Mini";

	memory@0 {
		device_type = "memory";
		reg = <0x0 0x0 0x0 0x40000000>; /* 1 GiB or 2 GiB */
	};

	thermal-zones {
		cpu-thermal {
			polling-delay-passive = <250>; /* milliseconds */
			polling-delay = <1000>; /* milliseconds */

			thermal-sensors = <&scpi_sensors 0>;

			trips {
				cpu_alert0: cpu-alert0 {
					temperature = <70000>; /* millicelsius */
					hysteresis = <2000>; /* millicelsius */
					type = "active";
				};

				cpu_alert1: cpu-alert1 {
					temperature = <80000>; /* millicelsius */
					hysteresis = <2000>; /* millicelsius */
					type = "passive";
				};
			};

			cooling-maps {
				map0 {
					trip = <&cpu_alert0>;
					cooling-device = <&gpio_fan THERMAL_NO_LIMIT 1>;
				};

				map1 {
					trip = <&cpu_alert1>;
					cooling-device = <&gpio_fan THERMAL_NO_LIMIT 1>;
				};
			};
		};
	};

	gpio_fan: gpio-fan {
		compatible = "gpio-fan";
		/* Dummy RPM values since fan is optional */
		gpio-fan,speed-map = <0 0
				      1 1
				      2 2
				      3 3>;
		#cooling-cells = <2>;
	};

	spi {
		compatible = "spi-gpio";
		sck-gpios = <&gpio GPIODV_27  GPIO_ACTIVE_HIGH>;
		mosi-gpios = <&gpio GPIODV_26 GPIO_ACTIVE_HIGH>;
		cs-gpios = <&gpio_ao GPIOAO_4 GPIO_ACTIVE_LOW>;
		num-chipselects = <1>;
		#address-cells = <1>;
		#size-cells = <0>;

		tm1628: led-controller@0 {
			compatible = "titanmec,tm1628";
			reg = <0>;
			spi-3wire;
			spi-lsb-first;
			spi-rx-delay-us = <1>;
			spi-max-frequency = <500000>;
			#address-cells = <2>;
			#size-cells = <0>;

			titanmec,segment-mapping = /bits/ 8 <4 5 6 1 2 3 7>;
			titanmec,grid = /bits/ 8 <4 3 2 1>;

			alarm@5,1 {
				reg = <5 1>;
				function = LED_FUNCTION_ALARM;
			};

			usb@5,2 {
				reg = <5 2>;
				function = LED_FUNCTION_USB;
			};
			play@5,3 {
				reg = <5 3>;
				function = "play";
			};

			pause@5,4 {
				reg = <5 4>;
				function = "pause";
			};

			colon@5,5 {
				reg = <5 5>;
				function = "colon";
			};

			lan@5,6 {
				reg = <5 6>;
				function = LED_FUNCTION_LAN;
			};

			wlan@5,7 {
				reg = <5 7>;
				function = LED_FUNCTION_WLAN;
			};
		};
	};
	
	openvfd {
		compatible = "open,vfd";
		dev_name = "openvfd";
		status = "okay";
	};
};

&usb {
	dr_mode = "host";
};

&sd_emmc_c {
	status = "disabled";
};

&pinctrl_periphs {
	nand_pins: nand_pins {
		mux {
			groups = "emmc_nand_d0",
				"emmc_nand_d1",
				"emmc_nand_d2",
				"emmc_nand_d3",
				"emmc_nand_d4",
				"emmc_nand_d5",
				"emmc_nand_d6",
				"emmc_nand_d7",
				"nand_ce0",
				"nand_ce1",
				"nand_rb0",
				"nand_ale",
				"nand_cle",
				"nand_wen_clk",
				"nand_ren_wr",
				"nand_dqs";
			function = "nand";
		};
	};
};

&apb {
	mtd_nand: nand@74800 {
		compatible = "amlogic,meson-gxl-nfc";
		reg = <0x0 0x74800 0x0 0x100>, <0x0 0x74000 0x0 0x800>;
		reg-name = "nfc", "emmc";
		#address-cells = <1>;
		#size-cells = <0>;
		interrupts = <GIC_SPI 34 IRQ_TYPE_EDGE_RISING>;
		status = "okay";
		clocks = <&clkc CLKID_SD_EMMC_C>, <&clkc CLKID_SD_EMMC_C_CLK0>, <&clkc CLKID_FCLK_DIV2>;
		clock-names = "core", "clkin0", "clkin1";

		pinctrl-names = "default";
		pinctrl-0 = <&nand_pins>;

		nand0@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <1>;

			nand-on-flash-bbt;
			nand-ecc-mode = "hw";
			nand-ecc-strength = <8>;
			nand-ecc-step-size = <1024>;

			meson-nand-user-mode = <2>;
			meson-nand-ran-mode = <1>;

			boot@0 {
				label = "boot";
				reg = <0x00000000 0x00200000>;
				read-only;
			};

			env@200000 {
				label = "env";
				reg = <0x00200000 0x00400000>;
			};

			system@600000 {
				label = "system";
				reg = <0x00600000 0x00a00000>;
			};

			rootfs@1000000 {
				label = "rootfs";
				reg = <0x01000000 0x03000000>;
			};

			media@4000000 {
				label = "media";
				reg = <0x04000000 0x8000000>;
			};
		};
	};
};
